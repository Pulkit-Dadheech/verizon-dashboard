{"version":3,"file":"static/js/704.e970ef11.chunk.js","mappings":"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","sources":["components/Sidebar/SidebarButton.jsx","components/Sidebar/Sidebar.jsx","components/Navbar/MainNavbar.jsx","components/Navbar/VerizonDashboardNavbar.jsx","components/DashboardCards.jsx","components/dashboard/VerizonDashboard.jsx","components/dashboard/ThermalSensor/ThermalTable.jsx","components/dashboard/ThermalSensor/ThermalSensorDashboard.jsx","components/dashboard/GaugeMonitor/GaugeTable.jsx","components/dashboard/GaugeMonitor/GaugeMonitorDashboard.jsx","components/Navbar/SummaryDashboardNavbar.jsx","components/dashboard/SummaryDashboard/SummaryDashboard.jsx","components/MainDashboard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSidebar } from \"../../context/SidebarContext\";\r\n\r\nconst SidebarButton = (props) => {\r\n    const { sectionName, currentSection,LogoComponent } = props;\r\n    const {activeSection, setActiveSection} = useSidebar();\r\n    return (\r\n        <button\r\n            className={`flex items-center gap-3 px-2 py-2 text-sm font-semibold transition ${\r\n            activeSection === currentSection\r\n                ? 'border-l-4 border-gray-400 bg-gray-100 text-gray-500'\r\n                : 'hover:cursor-pointer  text-gray-500'\r\n            }`}\r\n            onClick={() => setActiveSection(currentSection)}\r\n        >\r\n            {LogoComponent && <span><LogoComponent/></span>}\r\n            <span>{sectionName}</span>\r\n        </button>\r\n    );\r\n}\r\nexport default SidebarButton;","import React from \"react\";\r\nimport SidebarButton from \"./SidebarButton\";\r\n\r\nconst Sidebar = (props) => {\r\n  const { titleName, activeSectionList, LogoComponents, sectionNames } = props;\r\n\r\n  return (\r\n    <aside className=\"w-60 min-h-screen bg-white/90 border-r border-slate-200 flex flex-col py-8 px-3 shadow-md\">\r\n      {/* Logo and title */}\r\n      <div className=\"flex items-center gap-3 mb-10 px-2\">\r\n        <span className=\"text-xl\"></span>\r\n        <span className=\"text-xl font-bold text-gray-500\">{titleName}</span>\r\n      </div>\r\n      {/* All Components */}\r\n      <nav className=\"flex flex-col gap-3\">\r\n        {sectionNames.map((sectionName, index) => (\r\n          <SidebarButton\r\n            key={index}\r\n            sectionName={sectionName}\r\n            currentSection={activeSectionList[index]}\r\n            LogoComponent={LogoComponents[index] ? LogoComponents[index] : null} // Handle null case for icons\r\n          />\r\n        ))}\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FiBell, FiUser, FiFilter, FiHelpCircle, FiMonitor } from 'react-icons/fi';\r\n\r\nconst MainNavbar = () => {\r\n    const location = useLocation();\r\n    const now = new Date();\r\n    const dateStr = now.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' });\r\n    const timeStr = now.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' });\r\n\r\n    const navItems = [\r\n        { name: \"Map\", path: \"/map\" },\r\n        { name: \"Dashboard\", path: \"/\" },\r\n        { name: \"Video\", path: \"/video\" },\r\n        { name: \"Settings\", path: \"/settings\" }\r\n    ];\r\n\r\n    return (\r\n        <nav className=\"bg-white shadow-md\">\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"flex justify-between items-center h-16\">\r\n                    {/* Left: Company Branding */}\r\n                    <div className=\"\">\r\n                        <span className=\"text-gray-600 font-bold text-sm leading-tight\">HITACHI</span>\r\n                        <span> | </span>\r\n                        <span className=\"text-gray-400 text-sm leading-tight -mt-1\">Hitachi Visualization Suite</span>\r\n                    </div>\r\n                    {/* Center: Navigation */}\r\n                    <div className=\"flex items-center space-x-4 h-full\">\r\n                        {navItems.map(item => (\r\n                            <Link\r\n                            key={item.name}\r\n                            to={item.path}\r\n                            className={`h-full flex items-center text-sm font-semibold min-h-max px-2 py-1 transition ${\r\n                                location.pathname === item.path\r\n                                    ? \"border-b-2 border-gray-800 text-gray-400 \"\r\n                                    : \"text-gray-400 hover:cursor-pointer\"\r\n                            }`}\r\n                            >\r\n                                {item.name}\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                    {/* Right: Date, Time, Icons */}\r\n                    <div className=\"flex items-center space-x-4\">\r\n                        <div className=\"flex flex-col items-end mr-4\">\r\n                            <span className=\"text-xs text-gray-500\">{dateStr}</span>\r\n                            <span className=\"text-base font-semibold text-gray-700\">{timeStr}</span>\r\n                        </div>\r\n                        <FiBell className=\"w-5 h-5 text-gray-500 hover:text-blue-500 cursor-pointer\" title=\"Alarm\" />\r\n                        <FiUser className=\"w-5 h-5 text-gray-500 hover:text-blue-500 cursor-pointer\" title=\"Profile\" />\r\n                        <FiFilter className=\"w-5 h-5 text-gray-500 hover:text-blue-500 cursor-pointer\" title=\"Filter\" />\r\n                        <span className=\"relative\">\r\n                            <FiHelpCircle className=\"w-5 h-5 text-gray-500 hover:text-blue-500 cursor-pointer\" title=\"Help\" />\r\n                            <span className=\"absolute top-0 right-0 block w-2 h-2 bg-blue-500 rounded-full\"></span>\r\n                        </span>\r\n                        <FiMonitor className=\"w-5 h-5 text-gray-500 hover:text-blue-500 cursor-pointer\" title=\"Screen\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default MainNavbar;","import React from 'react';\r\nimport { HvHeader, HvIconContainer, HvHeaderBrand, HvHeaderActions, HvIconButton } from \"@hitachivantara/uikit-react-core\";\r\nimport { Time } from \"@hitachivantara/uikit-react-icons\";\r\nimport { FaThermometerHalf, FaCamera } from 'react-icons/fa';\r\n\r\nconst VerizonDashboardNavbar = () => {\r\n\r\n    const NavbarSubheadingColor = 'text-gray-500';\r\n    return (\r\n        <div className='bg-white text-black'>\r\n            <HvHeader position=\"relative\" className=\"mb-lg p-2 w-full flex items-center justify-between overflow-hidden\">\r\n                <div className=\"flex items-center\">\r\n                    <HvIconContainer color=\"warning\" size=\"sm\">\r\n                        <FaThermometerHalf className='text-yellow-600' />\r\n                    </HvIconContainer>\r\n                    <HvIconContainer size=\"sm\">\r\n                        <FaCamera className='text-blue-500' />\r\n                    </HvIconContainer>\r\n                </div>\r\n                <div className='p-2 flex-shrink-0'>\r\n                    <HvHeaderBrand name=\"Thermal & Gauge Monitoring System\" className='font-semibold'/>\r\n                    <HvHeaderBrand name=\"Real-time station sensor oversight\" className={`text-xs ${NavbarSubheadingColor}`} />\r\n                </div>\r\n                <HvHeaderActions className=\"flex items-center flex-shrink-0\">\r\n                    <HvIconButton className=\"flex items-center\">\r\n                        <Time />\r\n                    </HvIconButton>\r\n                    <span className={`text-sm font-semibold ${NavbarSubheadingColor} whitespace-nowrap overflow-hidden text-ellipsis max-w-xs`}>\r\n                            Last Updated: 6:52:38 PM\r\n                    </span>\r\n                </HvHeaderActions>\r\n            </HvHeader>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerizonDashboardNavbar;","import React from 'react'\r\nimport { HvSection } from \"@hitachivantara/uikit-react-core\";\r\nimport { HvDashboard } from \"@hitachivantara/uikit-react-lab\";\r\nimport { \r\n  FaThermometerHalf, \r\n  FaExclamationTriangle, \r\n  FaClock, \r\n  FaArrowUp, \r\n  FaCheckCircle, \r\n  FaExclamationCircle, \r\n  FaCamera, \r\n  FaWifi, \r\n  FaChartLine \r\n} from 'react-icons/fa';\r\n\r\n// Centralized card style variables\r\nconst cardBgColor =\"#FFFFFF\"; \r\nconst cardHeadingColor = \"text-gray-600\";\r\nconst cardInnerTextColor = \"text-gray-500\";\r\nconst cardIconColor = \"text-gray-600\";\r\nconst cardInnerTextLightColor = \"text-gray-400\";\r\nconst gaugeReadingElementsBgColor = \"bg-gray-100\";\r\nconst lastUpdateElementsBgColor = \"bg-gray-100\";\r\n\r\n// Helper for card heading with separator\r\nconst CardHeading = ({ icon, text }) => (\r\n    <div className=\"flex items-center gap-2 mb-3\">\r\n      {icon}\r\n      <span className={`text-base font-semibold ${cardHeadingColor}`}>{text}</span>\r\n    </div>\r\n);\r\n\r\n// Example data for stations\r\nconst stations = [\r\n  { name: \"Station A\", value: 8, total: 12, color: \"#f87171\" }, //light red\r\n  { name: \"Station B\", value: 5, total: 12, color: \"#C2410C\" },\r\n  { name: \"Station C\", value: 12, total: 12 , color: \"#991B1B\"},\r\n  { name: \"Station D\", value: 3, total: 12, color: \"#FBBF24\" },\r\n  { name: \"Station E\", value: 7, total: 12, color: \"#FB923C\" },\r\n];\r\n\r\n// Define your card data, including title and content as components\r\nconst cardData = [\r\n  {\r\n    key: \"1\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n        text=\"Active vs. Inactive Sensors\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <div>\r\n          <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n          />\r\n          <div className='flex flex-row justify-between items-end mb-4 mt-2'>\r\n            <div className='text-3xl font-bold text-green-400'>247</div>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Active</div>\r\n          </div>\r\n          <div className='flex flex-row justify-between items-end mb-2 mt-4'>\r\n            <div className='text-xl font-semibold text-red-400'>13</div>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Inactive</div>\r\n          </div>\r\n        </div>\r\n        <hr className='border-gray-600 my-4' />\r\n        <div className='flex justify-between items-center mt-4'>\r\n          <span className={`text-sm ${cardInnerTextLightColor}`}>Uptime</span>\r\n          <span className='text-blue-400 font-semibold text-base'>95.0%</span>\r\n        </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"2\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaThermometerHalf className={`${cardIconColor} text-lg`} />}\r\n        text=\"Temperature Analytics\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <div>\r\n          <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n          />\r\n          <div className='flex flex-row justify-between items-end mb-4 mt-2'>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Max Temp</div>\r\n            <div className='text-3xl font-bold text-orange-400'>78.5°C</div>\r\n          </div>\r\n          <div className='flex flex-row justify-between items-end mt-3 mb-2'>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Avg Temp</div>\r\n            <div className='text-xl font-bold text-blue-400'>45.2°C</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <div className=\"w-full rounded bg-gray-100 overflow-hidden\">\r\n            <div className=\"h-2 rounded bg-gradient-to-r from-orange-400 to-blue-400\" style={{ width: '60%' }} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"3\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n        text=\"High Temp Alerts\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n          />\r\n        <div className='flex justify-between items-end'>\r\n          <div>\r\n            <div className='text-3xl font-bold text-yellow-400'>12</div>\r\n          </div>\r\n          <div className={`text-sm ${cardInnerTextLightColor}`}>Triggered</div>\r\n        </div>\r\n        <div className='flex items-center mt-3'>\r\n          <FaArrowUp className=\"text-red-400 mr-2\" />\r\n          <span className='text-red-400 text-sm font-semibold'>+3 from yesterday</span>\r\n        </div>\r\n        <hr className='border-t border-gray-600 my-4' />\r\n        <div className={`text-sm ${cardInnerTextColor}`}>Safety threshold exceeded</div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"4\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n        text=\"Unresolved Outages\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n          />\r\n        <div className='flex justify-between items-end'>\r\n          <div>\r\n            <div className='text-3xl font-bold text-red-400'>5</div>\r\n          </div>\r\n          <div className={`text-sm ${cardInnerTextLightColor}`}>Active</div>\r\n        </div>\r\n        <div className='flex items-center mt-3'>\r\n          <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500  mr-2\">\r\n            <FaClock className='text-blue-400' />\r\n          </span>\r\n          <span className='text-sm text-blue-300'>Avg: 2.4h</span>\r\n        </div>\r\n        <hr className='border-t border-gray-600 my-4' />\r\n        <div className={`text-sm ${cardInnerTextColor}`}>Pending resolution</div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"5\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaThermometerHalf className={`${cardIconColor} text-lg`} />}\r\n        text=\"Location-wise Fault Distribution\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n          />\r\n      <div className='flex flex-col gap-4'>\r\n        {stations.map((station) => (\r\n          <div className='flex justify-between items-center' key={station.name}>\r\n            <span className={`text-sm ${cardInnerTextColor}`}>{station.name}</span>\r\n            <span className=\"w-[90%] mx-2 rounded bg-gray-100 overflow-hidden\">\r\n              <div\r\n                className=\"h-2 rounded\"\r\n                style={{ width: `${Math.round((station.value / station.total) * 100)}%`, backgroundColor: station.color }}\r\n              />\r\n            </span>\r\n            <span className='text-lg font-semibold text-blue-400'>{station.value}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"6\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaCamera className={`${cardIconColor} text-lg`} />}\r\n        text=\"Gauge Reading Accuracy Check\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n        />\r\n        <div className=\"flex gap-6 mb-4\">\r\n          <div className={`flex-1 flex flex-col items-center justify-center ${gaugeReadingElementsBgColor} p-6 rounded-lg shadow-md`}>\r\n            <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500  mb-2\">\r\n              <FaCheckCircle className=\"text-green-400 text-2xl\" />\r\n            </span>\r\n            <div className=\"text-green-400 text-3xl font-bold\">98.51%</div>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Accuracy Rate</div>\r\n          </div>\r\n          <div className={`flex-1 flex flex-col items-center justify-center ${gaugeReadingElementsBgColor} p-6 rounded-lg shadow-md`}>\r\n            <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500 mb-2\">\r\n              <FaExclamationCircle className=\"text-yellow-400 text-2xl\" />\r\n            </span>\r\n            <div className=\"text-yellow-400 text-3xl font-bold\">23</div>\r\n            <div className={`text-sm ${cardInnerTextColor}`}>Anomalies</div>\r\n          </div>\r\n        </div>\r\n        <div className={`text-sm ${cardInnerTextColor}`}>\r\n          Total readings processed: <span className=\"text-white font-semibold\">1,547</span>\r\n        </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"7\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaClock className={`${cardIconColor} text-lg`} />}\r\n        text=\"Last Update Age\"\r\n      />\r\n    ),\r\n    content: (\r\n      <>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n        />\r\n      <div className=\"flex flex-col gap-2\">\r\n        {/* Row 1 */}\r\n        <div className={`flex items-center justify-between ${lastUpdateElementsBgColor} rounded p-3`}>  \r\n          <div className=\"flex items-center gap-2\">\r\n            <FaWifi className=\"text-green-400\" />\r\n            <span className={`text-sm ${cardHeadingColor}`}>TH-001</span>\r\n          </div>\r\n          <span className=\"text-xs text-green-400 font-semibold\">2 min ago</span>\r\n        </div>\r\n        {/* Row 2 */}\r\n        <div className={`flex items-center justify-between ${lastUpdateElementsBgColor} rounded p-3`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <FaWifi className=\"text-green-400\" />\r\n            <span className={`text-sm ${cardHeadingColor}`}>TH-002</span>\r\n          </div>\r\n          <span className=\"text-xs text-green-400 font-semibold\">5 min ago</span>\r\n        </div>\r\n        {/* Row 3 */}\r\n        <div className={`flex items-center justify-between ${lastUpdateElementsBgColor} rounded p-3`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500\">\r\n              <FaExclamationCircle className=\"text-yellow-400\" />\r\n            </span>\r\n            <span className={`text-sm ${cardHeadingColor}`}>GA-003</span>\r\n          </div>\r\n          <span className=\"text-xs text-yellow-400 font-semibold\">15 min ago</span>\r\n        </div>\r\n        {/* Row 4 */}\r\n        <div className={`flex items-center justify-between ${lastUpdateElementsBgColor} rounded p-3`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500\">\r\n              <FaExclamationCircle className=\"text-red-400\" />\r\n            </span>\r\n            <span className={`text-sm ${cardHeadingColor}`}>TH-004</span>\r\n          </div>\r\n          <span className=\"text-xs text-red-400 font-semibold\">45 min ago</span>\r\n        </div>\r\n        {/* Row 5 */}\r\n        <div className={`flex items-center justify-between ${lastUpdateElementsBgColor} rounded p-3`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"inline-flex items-center justify-center rounded-full border-1 border-gray-500\">\r\n              <FaExclamationCircle className=\"text-red-400\" />\r\n            </span>\r\n            <span className={`text-sm ${cardHeadingColor}`}>GA-005</span>\r\n          </div>\r\n          <span className=\"text-xs text-red-400 font-semibold\">1 hr ago</span>\r\n        </div>\r\n      </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  },\r\n  {\r\n    key: \"8\",\r\n    title: (\r\n      <CardHeading\r\n        icon={<FaChartLine className={`${cardIconColor} text-lg`} />}\r\n        text=\"Log Volume (24h)\"\r\n      />\r\n    ),\r\n    content: (\r\n      <div>\r\n        <hr\r\n            className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n            style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n        />\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <span className=\"text-4xl font-bold text-blue-400 my-2\">460</span>\r\n          <div className=\"flex items-center gap-4 border-1 p-2 border-gray-300 rounded\">\r\n            <FaArrowUp className=\"text-green-400 text-base\" />\r\n            <span className=\"text-green-400 text-sm font-semibold\">\r\n              <span className=\"text-lg\">+12%</span> vs yesterday\r\n            </span>\r\n\r\n          </div>\r\n        </div>\r\n        {/* Bar chart */}\r\n        <div className=\"flex flex-col gap-1 mt-2\">\r\n          <div className=\"flex items-center gap-2 mx-1\">\r\n            <span className={`text-xs ${cardInnerTextColor} w-10`}>00:00</span>\r\n            <div className=\"bg-blue-400 h-2 rounded\" style={{ width: '40%' }} />\r\n            <span className={`text-xs ${cardInnerTextColor} ml-2`}>45</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 mx-1\">\r\n            <span className={`text-xs ${cardInnerTextColor} w-10`}>04:00</span>\r\n            <div className=\"bg-blue-400 h-2 rounded\" style={{ width: '30%' }} />\r\n            <span className={`text-xs ${cardInnerTextColor} ml-2`}>32</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 mx-1\">\r\n            <span className={`text-xs ${cardInnerTextColor} w-10`}>08:00</span>\r\n            <div className=\"bg-blue-400 h-2 rounded\" style={{ width: '52%' }} />\r\n            <span className={`text-xs ${cardInnerTextColor} ml-2`}>78</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 mx-1\">\r\n            <span className={`text-xs ${cardInnerTextColor} w-10`}>12:00</span>\r\n            <div className=\"bg-blue-400 h-2 rounded\" style={{ width: '63%' }} />\r\n            <span className={`text-xs ${cardInnerTextColor} ml-2`}>95</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 mx-1\">\r\n            <span className={`text-xs ${cardInnerTextColor} w-10`}>16:00</span>\r\n            <div className=\"bg-blue-400 h-2 rounded\" style={{ width: '82%' }} />\r\n            <span className={`text-xs ${cardInnerTextColor} ml-2`}>123</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n  }\r\n];\r\n\r\nconst layout = [\r\n  { i: \"1\", x: 0, y: 0, w: 6, h: 1.5, isResizable: false },\r\n  { i: \"2\", x: 6, y: 0, w: 6, h: 1.5, isResizable: false },\r\n  { i: \"3\", x: 0, y: 1, w: 6, h: 1.5, isResizable: false },\r\n  { i: \"4\", x: 6, y: 1, w: 6, h: 1.5, isResizable: false },\r\n  { i: \"5\", x: 0, y: 2, w: 12, h: 1.9, isResizable: false },\r\n  { i: \"6\", x: 0, y: 3, w: 12, h: 1.7, isResizable: false },\r\n  { i: \"7\", x: 0, y: 4, w: 12, h: 2.3, isResizable: false },\r\n  { i: \"8\", x: 0, y: 5, w: 12, h: 1.7, isResizable: false }\r\n];\r\n\r\nconst DashboardCards = () => {\r\n  return (\r\n    <HvDashboard layout={layout}>\r\n      {cardData.map(card => (\r\n        <HvSection\r\n          key={card.key}\r\n          title={card.title}\r\n          style={card.style}\r\n        >\r\n          {card.content}\r\n        </HvSection>\r\n      ))}\r\n    </HvDashboard>\r\n  );\r\n};\r\n\r\nexport default DashboardCards;","import React from 'react';\r\nimport Navbar from '../Navbar/VerizonDashboardNavbar';\r\nimport { HvButton } from '@hitachivantara/uikit-react-core';\r\nimport { Refresh } from '@hitachivantara/uikit-react-icons';\r\nimport DashboardCards from '../DashboardCards';\r\n\r\nconst dashboardColor = {bg: 'bg-gray-100', text: 'text-black'};\r\nconst dashboardButtonColor = 'bg-white';\r\n\r\nconst VerizonDashboard = () => {\r\n    return (\r\n        <div className={`min-h-screen ${dashboardColor.bg} ${dashboardColor.text}`}>\r\n            <Navbar />\r\n            {/* Station Monitoring Dashboard */}\r\n            <div className='flex justify-between items-center mt-5 mx-5 mb-2'>\r\n                <div className={`text-2xl font-bold ${dashboardColor.bg}`}>Station Monitoring Dashboard</div>\r\n                <div className={`flex items-center rounded-lg shadow-lg ${dashboardButtonColor}` }>\r\n                    <HvButton\r\n                        variant=\"primary\"\r\n                        size=\"md\"\r\n                        radius=\"round\"\r\n                        disabled={false}\r\n                        className={`m-2 rounded-lg text-white ${dashboardColor.bg}`}\r\n                        startIcon={<Refresh className={dashboardColor.text} />}\r\n                    >\r\n                        <div className={`${dashboardColor.text} text-sm font-semibold`}>Refresh Data</div>\r\n                    </HvButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Dashboard Cards */}\r\n            <DashboardCards />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerizonDashboard;","import React from \"react\";\r\n\r\nconst ThermalTable = ({ data = [] }) => {\r\n  if (!data.length) return <div className=\"p-4\">No records to display</div>;\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto p-4\">\r\n      <table className=\"min-w-full border border-gray-300 bg-white\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1 bg-yellow-300 text-center\">Date</th>\r\n            <th className=\"border px-2 py-1 bg-yellow-300 text-center\">Timestamp</th>\r\n            <th className=\"border px-2 py-1 bg-blue-200 text-center\">tempmax_attribute</th>\r\n            <th className=\"border px-2 py-1 bg-blue-200 text-center\">tempavg_attribute</th>\r\n            <th className=\"border px-2 py-1 bg-blue-200 text-center\">tempmin_attribute</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, idx) => {\r\n            const date = `${row.Year}-${String(row.Month).padStart(2,'0')}-${String(row.Day).padStart(2,'0')}`;\r\n            const timestamp = `${String(row.Hour).padStart(2,'0')}:${String(row.Minute).padStart(2,'0')}`;\r\n            return (\r\n              <tr key={idx} className={idx % 2 ? \"bg-white\" : \"bg-gray-50\"}>\r\n                <td className=\"border px-2 py-1 text-center\">{date}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{timestamp}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{row.tempmax_attribute}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{row.tempavg_attribute}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{row.tempmin_attribute}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThermalTable;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ThermalTable from \"./ThermalTable\";\r\nimport { HvButton } from \"@hitachivantara/uikit-react-core\";\r\nimport { Refresh } from \"@hitachivantara/uikit-react-icons\";\r\n\r\nconst dashboardColor = { bg: \"bg-gray-100\", text: \"text-black\" };\r\nconst dashboardButtonColor = \"bg-white\";\r\n\r\nconst FILTERS = [\r\n  { label: \"Last Hour\", value: \"1h\" },\r\n  { label: \"Last 12 Hours\", value: \"12h\" },\r\n  { label: \"Last 24 Hours\", value: \"24h\" },\r\n  { label: \"Last Week\", value: \"7d\" },\r\n  { label: \"Last 30 Days\", value: \"30d\" },\r\n];\r\n\r\nfunction filterData(data, filter) {\r\n  if (!data.length) return [];\r\n  const last = data[data.length - 1];\r\n  const lastDate = new Date(\r\n    last.Year,\r\n    last.Month - 1,\r\n    last.Day,\r\n    last.Hour,\r\n    last.Minute\r\n  );\r\n  let cutoff = new Date(lastDate);\r\n\r\n  switch (filter) {\r\n    case \"1h\":\r\n      cutoff.setHours(cutoff.getHours() - 1);\r\n      break;\r\n    case \"12h\":\r\n      cutoff.setHours(cutoff.getHours() - 12);\r\n      break;\r\n    case \"24h\":\r\n      cutoff.setHours(cutoff.getHours() - 24);\r\n      break;\r\n    case \"7d\":\r\n      cutoff.setDate(cutoff.getDate() - 7);\r\n      break;\r\n    case \"30d\":\r\n      cutoff.setDate(cutoff.getDate() - 30);\r\n      break;\r\n    default:\r\n      return data;\r\n  }\r\n\r\n  return data.filter((row) => {\r\n    const rowDate = new Date(\r\n      row.Year,\r\n      row.Month - 1,\r\n      row.Day,\r\n      row.Hour,\r\n      row.Minute\r\n    );\r\n    return rowDate >= cutoff && rowDate <= lastDate;\r\n  });\r\n}\r\n\r\nconst ThermalSensorDashboard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [filter, setFilter] = useState(\"12h\");\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [tableFilter, setTableFilter] = useState(\"12h\");\r\n  const [showTableDropdown, setShowTableDropdown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/thermal-data.json\")\r\n      .then((res) => res.json())\r\n      .then(setData);\r\n  }, []);\r\n\r\n  const filteredData = filterData(data, filter);\r\n  const filteredTableData = filterData(data, tableFilter);\r\n\r\n  const chartData = filteredData.map((row) => ({\r\n    time: `${row.Hour}:${row.Minute}`,\r\n    tempmax: row.tempmax_attribute,\r\n    tempavg: row.tempavg_attribute,\r\n    tempmin: row.tempmin_attribute,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-black\">\r\n      <div className=\"flex justify-between items-center mt-5 mx-5 mb-2\">\r\n        <div className={`text-2xl font-bold ${dashboardColor.bg}`}>\r\n          Thermal Sensor Dashboard\r\n        </div>\r\n        <div\r\n          className={`flex items-center rounded-lg shadow-lg ${dashboardButtonColor}`}\r\n        >\r\n          <HvButton\r\n            variant=\"primary\"\r\n            size=\"md\"\r\n            radius=\"round\"\r\n            disabled={false}\r\n            className={`m-2 rounded-lg text-white ${dashboardColor.bg}`}\r\n            startIcon={<Refresh className={dashboardColor.text} />}\r\n          >\r\n            <div className={`${dashboardColor.text} text-sm font-semibold`}>\r\n              Refresh Data\r\n            </div>\r\n          </HvButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-5\">\r\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"mb-2 font-semibold\">Thermal Data</div>\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-blue-700 text-white px-4 py-2 rounded shadow\"\r\n                onClick={() => setShowDropdown((v) => !v)}\r\n              >\r\n                Filter\r\n              </button>\r\n              {showDropdown && (\r\n                <div className=\"absolute right-0 mt-2 w-40 bg-white border rounded shadow z-10\">\r\n                  {FILTERS.map((f) => (\r\n                    <div\r\n                      key={f.value}\r\n                      className={`px-4 py-2 cursor-pointer hover:bg-blue-100 ${\r\n                        filter === f.value ? \"font-bold text-blue-700\" : \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        setFilter(f.value);\r\n                        setShowDropdown(false);\r\n                      }}\r\n                    >\r\n                      {f.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart\r\n              data={chartData}\r\n              margin={{ top: 20, right: 40, left: 0, bottom: 20 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"time\" />\r\n              <YAxis domain={[\"auto\", \"auto\"]} />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line\r\n                type=\"linear\"\r\n                dataKey=\"tempmax\"\r\n                stroke=\"#1976d2\"\r\n                name=\"Max\"\r\n                dot={false}\r\n              />\r\n              <Line\r\n                type=\"linear\"\r\n                dataKey=\"tempmin\"\r\n                stroke=\"#bdb76b\"\r\n                name=\"Min\"\r\n                dot={false}\r\n              />\r\n              <Line\r\n                type=\"linear\"\r\n                dataKey=\"tempavg\"\r\n                stroke=\"#ff9800\"\r\n                name=\"Avg\"\r\n                dot={false}\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-lg p-4 mt-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"text-lg font-semibold\">\r\n              Historical Reading – Thermal Camera\r\n            </div>\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-blue-700 text-white px-4 py-2 rounded shadow\"\r\n                onClick={() => setShowTableDropdown((v) => !v)}\r\n              >\r\n                Filter\r\n              </button>\r\n              {showTableDropdown && (\r\n                <div className=\"absolute right-0 mt-2 w-40 bg-white border rounded shadow z-10\">\r\n                  {FILTERS.map((f) => (\r\n                    <div\r\n                      key={f.value}\r\n                      className={`px-4 py-2 cursor-pointer hover:bg-blue-100 ${\r\n                        tableFilter === f.value ? \"font-bold text-blue-700\" : \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        setTableFilter(f.value);\r\n                        setShowTableDropdown(false);\r\n                      }}\r\n                    >\r\n                      {f.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <ThermalTable data={filteredTableData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThermalSensorDashboard;\r\n","import React from \"react\";\r\n\r\nconst GaugeTable = ({ data = [] }) => {\r\n  if (!data.length) return <div className=\"p-4\">No records to display</div>;\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto p-4\">\r\n      <table className=\"min-w-full border border-gray-300 bg-white\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1 bg-yellow-300 text-center\">Date</th>\r\n            <th className=\"border px-2 py-1 bg-yellow-300 text-center\">Timestamp</th>\r\n            <th className=\"border px-2 py-1 bg-blue-200 text-center\">gauge_temp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, idx) => {\r\n            const date = `${row.Year}-${String(row.Month).padStart(2,'0')}-${String(row.Day).padStart(2,'0')}`;\r\n            const timestamp = `${String(row.Hour).padStart(2,'0')}:${String(row.Minute).padStart(2,'0')}`;\r\n            return (\r\n              <tr key={idx} className={idx % 2 ? \"bg-white\" : \"bg-gray-50\"}>\r\n                <td className=\"border px-2 py-1 text-center\">{date}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{timestamp}</td>\r\n                <td className=\"border px-2 py-1 text-center\">{row.gauge_temp}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GaugeTable;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport GaugeTable from \"./GaugeTable\";\r\nimport { HvButton } from \"@hitachivantara/uikit-react-core\";\r\nimport { Refresh } from \"@hitachivantara/uikit-react-icons\";\r\n\r\nconst dashboardColor = { bg: \"bg-gray-100\", text: \"text-black\" };\r\nconst dashboardButtonColor = \"bg-white\";\r\n\r\nconst FILTERS = [\r\n  { label: \"Last Hour\", value: \"1h\" },\r\n  { label: \"Last 12 Hours\", value: \"12h\" },\r\n  { label: \"Last 24 Hours\", value: \"24h\" },\r\n  { label: \"Last Week\", value: \"7d\" },\r\n  { label: \"Last 30 Days\", value: \"30d\" },\r\n];\r\n\r\nfunction filterData(data, filter) {\r\n  if (!data.length) return [];\r\n  const last = data[data.length - 1];\r\n  const lastDate = new Date(\r\n    last.Year,\r\n    last.Month - 1,\r\n    last.Day,\r\n    last.Hour,\r\n    last.Minute\r\n  );\r\n  let cutoff = new Date(lastDate);\r\n\r\n  switch (filter) {\r\n    case \"1h\":\r\n      cutoff.setHours(cutoff.getHours() - 1);\r\n      break;\r\n    case \"12h\":\r\n      cutoff.setHours(cutoff.getHours() - 12);\r\n      break;\r\n    case \"24h\":\r\n      cutoff.setHours(cutoff.getHours() - 24);\r\n      break;\r\n    case \"7d\":\r\n      cutoff.setDate(cutoff.getDate() - 7);\r\n      break;\r\n    case \"30d\":\r\n      cutoff.setDate(cutoff.getDate() - 30);\r\n      break;\r\n    default:\r\n      return data;\r\n  }\r\n\r\n  return data.filter((row) => {\r\n    const rowDate = new Date(\r\n      row.Year,\r\n      row.Month - 1,\r\n      row.Day,\r\n      row.Hour,\r\n      row.Minute\r\n    );\r\n    return rowDate >= cutoff && rowDate <= lastDate;\r\n  });\r\n}\r\n\r\nconst GaugeMonitorDashboard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [filter, setFilter] = useState(\"12h\");\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  // Add state for table filter\r\n  const [tableFilter, setTableFilter] = useState(\"12h\");\r\n  const [showTableDropdown, setShowTableDropdown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/gauge-data.json\")\r\n      .then((res) => res.json())\r\n      .then(setData);\r\n  }, []);\r\n\r\n  const filteredData = filterData(data, filter);\r\n  const filteredTableData = filterData(data, tableFilter);\r\n\r\n  const chartData = filteredData.map((row) => ({\r\n    time: `${row.Hour}:${row.Minute}`,\r\n    gauge_temp: row.gauge_temp,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-black\">\r\n      <div className=\"flex justify-between items-center mt-5 mx-5 mb-2\">\r\n        <div className={`text-2xl font-bold ${dashboardColor.bg}`}>\r\n          Gauge Monitor Dashboard\r\n        </div>\r\n        <div\r\n          className={`flex items-center rounded-lg shadow-lg ${dashboardButtonColor}`}\r\n        >\r\n          <HvButton\r\n            variant=\"primary\"\r\n            size=\"md\"\r\n            radius=\"round\"\r\n            disabled={false}\r\n            className={`m-2 rounded-lg text-white ${dashboardColor.bg}`}\r\n            startIcon={<Refresh className={dashboardColor.text} />}\r\n          >\r\n            <div className={`${dashboardColor.text} text-sm font-semibold`}>\r\n              Refresh Data\r\n            </div>\r\n          </HvButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-5\">\r\n        <div className=\"bg-white rounded-lg shadow-lg p-5\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"text-lg font-semibold\">Analog Gauge</div>\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-blue-700 text-white px-4 py-2 rounded shadow\"\r\n                onClick={() => setShowDropdown((v) => !v)}\r\n              >\r\n                Filter\r\n              </button>\r\n              {showDropdown && (\r\n                <div className=\"absolute right-0 mt-2 w-40 bg-white border rounded shadow z-10\">\r\n                  {FILTERS.map((f) => (\r\n                    <div\r\n                      key={f.value}\r\n                      className={`px-4 py-2 cursor-pointer hover:bg-blue-100 ${\r\n                        filter === f.value ? \"font-bold text-blue-700\" : \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        setFilter(f.value);\r\n                        setShowDropdown(false);\r\n                      }}\r\n                    >\r\n                      {f.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart\r\n              data={chartData}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"time\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line\r\n                type=\"linear\"\r\n                dataKey=\"gauge_temp\"\r\n                stroke=\"#1976d2\"\r\n                name=\"Gauge Temp\"\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-lg p-5 mt-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <div className=\"text-lg font-semibold\">\r\n              Historical Reading – Gauge Readings\r\n            </div>\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-blue-700 text-white px-4 py-2 rounded shadow\"\r\n                onClick={() => setShowTableDropdown((v) => !v)}\r\n              >\r\n                Filter\r\n              </button>\r\n              {showTableDropdown && (\r\n                <div className=\"absolute right-0 mt-2 w-40 bg-white border rounded shadow z-10\">\r\n                  {FILTERS.map((f) => (\r\n                    <div\r\n                      key={f.value}\r\n                      className={`px-4 py-2 cursor-pointer hover:bg-blue-100 ${\r\n                        tableFilter === f.value ? \"font-bold text-blue-700\" : \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        setTableFilter(f.value);\r\n                        setShowTableDropdown(false);\r\n                      }}\r\n                    >\r\n                      {f.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Pass filteredTableData to GaugeTable */}\r\n          <GaugeTable data={filteredTableData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GaugeMonitorDashboard;\r\n","import React from 'react';\r\n\r\nconst SummaryDashboardNavbar = () => {\r\n    const NavbarSubheadingColor = 'text-gray-500';\r\n    return (\r\n        <div className='bg-white text-black'>\r\n            <nav className=\"mb-lg p-2 w-full flex items-center justify-between overflow-hidden\">\r\n                <div className='p-2 flex-shrink-0'>\r\n                    <h1 className='font-semibold'>Summary Dashboard</h1>\r\n                    <h2 className={`text-xs ${NavbarSubheadingColor}`}>Overview of all systems</h2>\r\n                </div>\r\n                <div className=\"flex items-center flex-shrink-0\">\r\n                    <span className={`text-sm font-semibold ${NavbarSubheadingColor} whitespace-nowrap overflow-hidden text-ellipsis max-w-xs`}>\r\n                        Last Updated: 6:52:38 PM\r\n                    </span>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SummaryDashboardNavbar;\r\n","import React from 'react';\r\nimport SummaryDashboardNavbar from '../../Navbar/SummaryDashboardNavbar';\r\nimport { HvDashboard } from '@hitachivantara/uikit-react-lab';\r\nimport { HvSection } from '@hitachivantara/uikit-react-core';\r\nimport { FaExclamationTriangle, FaThermometerHalf } from 'react-icons/fa';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Tooltip, Legend);\r\n\r\nconst cardHeadingColor = \"text-gray-600\";\r\nconst CardHeading = ({ icon, text }) => (\r\n    <div className=\"flex items-center gap-2 mb-3\">\r\n      {icon}\r\n      <span className={`text-base font-semibold ${cardHeadingColor}`}>{text}</span>\r\n    </div>\r\n);\r\n\r\nconst SummaryDashboard = () => {\r\n    \r\n    const dashboardColor = { bg: 'bg-gray-100', text: 'text-gray-500' };\r\n    const cardBgColor =\"#FFFFFF\"; \r\n    const cardIconColor = \"text-gray-600\";\r\n    \r\n    const layout = [\r\n        { i: \"1\", x: 0, y: 0, w: 6, h: 2, isResizable: false },\r\n        { i: \"2\", x: 6, y: 0, w: 6, h: 2, isResizable: false },\r\n        { i: \"3\", x: 0, y: 1, w: 6, h: 1.7, isResizable: false },\r\n        { i: \"4\", x: 6, y: 1, w: 6, h: 1.7, isResizable: false },\r\n    ];\r\n    \r\n    // Chart data and options should be defined BEFORE cardData\r\nconst temperatureTrendData = {\r\n  labels: [\r\n    \"3-15-4\", \"3-15-8\", \"3-15-12\", \"3-15-16\", \"3-15-20\", \"3-16-0\", \"3-16-4\", \"3-16-8\", \"3-16-12\", \"3-16-16\", \"3-16-20\", \"3-17-0\", \"3-17-4\", \"3-17-8\", \"3-17-12\"\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: 'Sensor 1',\r\n      data: [42, 43, 44, 43, 42, 41, 42, 43, 44, 43, 42, 41, 42, 43, 44],\r\n      borderColor: '#6366f1',\r\n      backgroundColor: 'rgba(99,102,241,0.1)',\r\n      tension: 0.3,\r\n      pointRadius: 2,\r\n      fill: false,\r\n    },\r\n    {\r\n      label: 'Sensor 2',\r\n      data: [37, 37.2, 37.4, 37.3, 37.5, 37.6, 37.4, 37.3, 37.2, 37.1, 37.2, 37.3, 37.4, 37.2, 37.4],\r\n      borderColor: '#10b981',\r\n      backgroundColor: 'rgba(16,185,129,0.1)',\r\n      tension: 0.3,\r\n      pointRadius: 2,\r\n      fill: false,\r\n    },\r\n    {\r\n      label: 'Sensor 3',\r\n      data: [22, 23, 22.5, 23, 22.8, 23.1, 23, 22.9, 23, 22.8, 23, 22.9, 23, 22.8, 23],\r\n      borderColor: '#f59e42',\r\n      backgroundColor: 'rgba(245,158,66,0.1)',\r\n      tension: 0.3,\r\n      pointRadius: 2,\r\n      fill: false,\r\n    },\r\n  ],\r\n};\r\n\r\nconst temperatureTrendOptions = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      display: true,\r\n      position: 'top',\r\n      labels: {\r\n        color: '#64748b',\r\n        font: { size: 12, family: 'inherit' },\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      callbacks: {\r\n        title: (tooltipItems) => {\r\n          const label = tooltipItems[0].label || '';\r\n          const [month, day, hour] = label.split('-');\r\n          return [`Month: ${month}`, `Day: ${day}`, `Hour: ${hour}`];\r\n        },\r\n        label: (context) => {\r\n          return `${context.dataset.label}: ${context.parsed.y}`;\r\n        },\r\n      },\r\n      backgroundColor: '#fff',\r\n      titleColor: '#222',\r\n      bodyColor: '#222',\r\n      borderColor: '#e5e7eb',\r\n      borderWidth: 1,\r\n      padding: 10,\r\n      displayColors: false,\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      grid: { color: 'rgba(0,0,0,0.05)' },\r\n      ticks: { color: '#64748b', font: { size: 11 } },\r\n    },\r\n    y: {\r\n      grid: { color: 'rgba(0,0,0,0.07)' },\r\n      ticks: { color: '#64748b', font: { size: 11 } },\r\n      beginAtZero: false,\r\n      min: 0,\r\n      max: 60,\r\n    },\r\n  },\r\n  elements: {\r\n    line: { borderWidth: 2,tension: 2},\r\n    point: { borderWidth: 0 },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\n\r\n// Data for Bushing Realtime Temperature (key 3)\r\nconst bushingTableData = [\r\n  { label: \"B1\", low: 54, avg: 58, max: 62 },\r\n  { label: \"B2\", low: 53, avg: 59, max: 53 },\r\n  { label: \"B3\", low: 54, avg: 57, max: 61 },\r\n];\r\n// Use images from public folder\r\nconst bushingImageUrl = \"/images/bushing-thermal.png\";\r\nconst bushingTimestamp = \"2022-02-10 14:58:59\";\r\n\r\n// Data for Transformer Indicators View (key 4)\r\nconst tapChanger = {\r\n  image: \"/images/tap-changer.png\",\r\n  position: \"1L, 3R, 6R\",\r\n  timestamp: \"2022-02-10 14:57:56\",\r\n};\r\nconst temperatureGauges = {\r\n  image: \"/images/temperature-gauges.png\",\r\n  primary: 50,\r\n  secondary: 50,\r\n  liquid: 48,\r\n};\r\n\r\n// Now define cardData below this!\r\nconst cardData = [\r\n    {\r\n        key: \"1\",\r\n        title: (\r\n            <CardHeading\r\n            icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n            text=\"Transformer Live View\"\r\n            />\r\n        ),\r\n        content: (\r\n            <>\r\n            <div>\r\n              <hr\r\n                className=\"border-t border-black/20 border-[0.5px] mb-2 w-[calc(100%+40px)] -mx-5\"\r\n                style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n              />\r\n                <div className=\"bg-white flex items-center justify-center\">\r\n                    {/* <video width=\"95%\" autoPlay loop muted playsinline>\r\n                    <source src=\"https://www.w3schools.com/html/mov_bbb.mp4\" type=\"video/mp4\" />\r\n                        Your browser does not support the video tag.\r\n                    </video> */}\r\n                    <span><h3 className='mt-5 pt-5'>add video here</h3></span>\r\n                </div>\r\n            </div>\r\n          </>\r\n        ),\r\n        style: {\r\n          backgroundColor: cardBgColor,\r\n          padding: \"20px\",\r\n          borderRadius: \"16px\",\r\n          border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n          boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n        }\r\n    },\r\n    {\r\n        key: \"2\",\r\n        title: (\r\n            <CardHeading\r\n            icon={<FaThermometerHalf className={`${cardIconColor} text-lg`} />}\r\n            text=\"Transformer Temperature Trend\"\r\n            />\r\n        ),\r\n        content: (\r\n            <>\r\n              <hr\r\n                className=\"border-t border-black/20 border-[0.5px] mb-5 w-[calc(100%+40px)] -mx-5\"\r\n                style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n              />\r\n              <div style={{ height: 220, marginBottom: 16 }}>\r\n                <Line data={temperatureTrendData} options={temperatureTrendOptions} />\r\n              </div>\r\n            </>\r\n        ),\r\n        style: {\r\n            backgroundColor: cardBgColor,\r\n            padding: \"20px\",\r\n            borderRadius: \"16px\",\r\n            border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n            boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n        }\r\n    },\r\n    {\r\n        key: \"3\",\r\n        title: (\r\n      <CardHeading\r\n        icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n        text=\"Bushing Realtime Temperature\"\r\n      />\r\n    ),\r\n    content: (\r\n        <>\r\n        <hr\r\n          className=\"border-t border-black/20 border-[0.5px] mb-1 w-[calc(100%+40px)] -mx-5\"\r\n          style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n        />\r\n        <div className=\"text-right text-sm text-gray-400 mt-1 mb-2\">{bushingTimestamp}</div>\r\n        <div className=\"flex flex-row gap-4 items-center\">\r\n          {/* Left: Thermal Image */}\r\n          <div className=\"flex-shrink-0\">\r\n            <img\r\n              src={bushingImageUrl}\r\n              alt=\"Thermal Bushing\"\r\n              className=\"w-40 h-38 object-cover rounded shadow\"\r\n            />\r\n          </div>\r\n          {/* Right: Table */}\r\n          <div className=\"flex-1\">\r\n            <table className=\"w-full h-38 text-center rounded overflow-hidden shadow border border-gray-200 bg-white\">\r\n              <thead>\r\n                <tr className=\"bg-gray-100 text-gray-600 text-xs\">\r\n                  <th className=\"py-1 px-2 border-b border-gray-200\">Temp&nbsp;°C</th>\r\n                  <th className=\"py-1 px-2 border-b border-gray-200\">Low</th>\r\n                  <th className=\"py-1 px-2 border-b border-gray-200\">Avg</th>\r\n                  <th className=\"py-1 px-2 border-b border-gray-200\">Max</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {bushingTableData.map((row, idx) => (\r\n                  <tr key={row.label} className={idx % 2 === 1 ? \"bg-gray-50\" : \"bg-white\"}>\r\n                    <td className=\"py-1 px-2 border-b border-gray-100 text-gray-600\">{row.label}</td>\r\n                    <td className=\"py-1 px-2 border-b border-gray-100 text-green-500 font-semibold\">{row.low}</td>\r\n                    <td className=\"py-1 px-2 border-b border-gray-100 text-green-500 font-semibold\">{row.avg}</td>\r\n                    <td className=\"py-1 px-2 border-b border-gray-100 text-green-500 font-semibold\">{row.max}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </>\r\n    ),\r\n    style: {\r\n      backgroundColor: cardBgColor,\r\n      padding: \"20px\",\r\n      borderRadius: \"16px\",\r\n      border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n      boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n    }\r\n    },\r\n    {\r\n        key: \"4\",\r\n        title: (\r\n            <CardHeading\r\n            icon={<FaExclamationTriangle className={`${cardIconColor} text-lg`} />}\r\n            text=\"Transformer Indicators View\"\r\n            />\r\n        ),\r\n        content: (\r\n            <>\r\n            <hr\r\n                className=\"border-t border-black/20 border-[0.5px] mb-1 w-[calc(100%+40px)] -mx-5\"\r\n                style={{ borderColor: \"rgba(0,0,0,0.15)\" }}\r\n              />\r\n            <div className=\"flex flex-row gap-4 items-center justify-center\">\r\n            {/* Tap Changer */}\r\n                <div className=\"flex flex-col items-center rounded min-w-[120px]\">\r\n                    <span className=\"text-md mb-1\">Tap Changer</span>\r\n                    <img\r\n                    src={tapChanger.image}\r\n                    alt=\"Tap Changer\"\r\n                    className=\"w-24 h-25 object-cover rounded shadow mb-1\"\r\n                    />\r\n                    <span className=\"text-sm mb-1 border-black border-1 mt-1 mb-2 p-1\">{tapChanger.position}</span>\r\n                    <span className=\"text-xs\">{tapChanger.timestamp}</span>\r\n                </div>\r\n            {/* Temperature Gauges */}\r\n            <div className=\"flex flex-row gap-4 items-center rounded\">\r\n                <div className='flex flex-col items-center rounded min-w-[120px]'>\r\n                    <span className=\"text-md mb-1\">Temperature</span>\r\n                    <img\r\n                    src={temperatureGauges.image}\r\n                    alt=\"Temperature Gauges\"\r\n                    className=\"w-18 h-40 object-cover rounded shadow mb-1\"\r\n                    />\r\n                </div>\r\n                <div className=\"text-between text-sm font-medium\">\r\n                    <div className=\"mb-1\">Primary Winding </div>\r\n                    <div className=\"font-normal text-center\">{temperatureGauges.primary}°C</div>\r\n                    <br/>\r\n                    <div className=\"mb-1\">Secondary Winding</div>\r\n                    <div className=\"font-normal text-center\">{temperatureGauges.secondary}°C</div>\r\n                    <br/>\r\n                    <div>Liquid Temperature</div>\r\n                    <div className=\"font-normal text-center\">{temperatureGauges.liquid}°C</div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n          </>\r\n        ),\r\n        style: {\r\n            backgroundColor: cardBgColor,\r\n            padding: \"20px\",\r\n            borderRadius: \"16px\",\r\n            border: \"0.5px solid rgba(0,0,0,0.15)\",\r\n            boxShadow: \"0 4px 16px 0 rgba(0,0,0,0.07)\"\r\n        }\r\n    }\r\n];\r\n\r\nreturn (\r\n    <div className={`min-h-screen ${dashboardColor.bg} ${dashboardColor.text}`}>\r\n            {/* Placeholder for future Navbar */}\r\n            <SummaryDashboardNavbar />\r\n            {/* Placeholder for future content */}\r\n            <div>\r\n                <HvDashboard layout={layout}>\r\n                    {cardData.map(card => (\r\n                        <HvSection\r\n                        key={card.key}\r\n                        title={card.title}\r\n                        style={card.style}\r\n                        >\r\n                        {card.content}\r\n                    </HvSection>\r\n                    ))}\r\n                </HvDashboard>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SummaryDashboard;","import React from \"react\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\nimport { useSidebar } from \"../context/SidebarContext\";\r\nimport MainNavbar from \"./Navbar/MainNavbar\";\r\nimport VerizonDashboard from \"./dashboard/VerizonDashboard\";\r\nimport ThermalSensorDashboard from \"./dashboard/ThermalSensor/ThermalSensorDashboard\";\r\nimport GaugeMonitorDashboard from \"./dashboard/GaugeMonitor/GaugeMonitorDashboard\";\r\nimport SummaryDashboard from \"./dashboard/SummaryDashboard/SummaryDashboard\";\r\n\r\nconst MainDashboard = () => {\r\n  const { activeSection } = useSidebar(\"verizon\");\r\n  const sidebarSections = [\"verizon\",\"thermal\",\"gauge\",\"summary\"];\r\n  const sidebarIcons = [null, null]; // Use null for no icons\r\n  const sidebarNames = [\"Verizon Dashboard\",\"Thermal Sensor Dashboard\",\"Gauge Monitor Dashboard\",\"Summary Dashboard\"];\r\n\r\n  return (\r\n    <>\r\n      <MainNavbar />\r\n      <div className=\"min-h-screen pt-1 w-full flex flex-col bg-gray-100\">\r\n        {/* Sidebar and Main Content */}\r\n        <div className=\"flex flex-1\">\r\n          {/* Sidebar with fixed width */}\r\n          <Sidebar\r\n            titleName=\"Dashboard\"\r\n            activeSectionList={sidebarSections}\r\n            LogoComponents={sidebarIcons}\r\n            sectionNames={sidebarNames}\r\n            className=\"w-60\" // Fixed width for Sidebar\r\n          />\r\n          {/* Main Content with remaining space */}\r\n          <div className=\"flex-grow m-2\">\r\n            {activeSection === \"verizon\" && <VerizonDashboard/>}\r\n            {activeSection === \"thermal\" && <ThermalSensorDashboard/>}\r\n            {activeSection === \"gauge\" && <GaugeMonitorDashboard/>}\r\n            {activeSection === \"summary\" && <SummaryDashboard/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainDashboard;"],"names":["props","sectionName","currentSection","LogoComponent","activeSection","setActiveSection","useSidebar","_jsxs","className","onClick","children","_jsx","titleName","activeSectionList","LogoComponents","sectionNames","map","index","SidebarButton","MainNavbar","location","useLocation","now","Date","dateStr","toLocaleDateString","undefined","year","month","day","timeStr","toLocaleTimeString","hour","minute","name","path","item","Link","to","pathname","FiBell","title","FiUser","FiFilter","FiHelpCircle","FiMonitor","VerizonDashboardNavbar","NavbarSubheadingColor","HvHeader","position","HvIconContainer","color","size","FaThermometerHalf","FaCamera","HvHeaderBrand","HvHeaderActions","HvIconButton","Time","cardBgColor","cardHeadingColor","cardInnerTextColor","cardIconColor","cardInnerTextLightColor","gaugeReadingElementsBgColor","lastUpdateElementsBgColor","CardHeading","_ref","icon","text","cardData","key","FaExclamationTriangle","content","_Fragment","style","borderColor","backgroundColor","padding","borderRadius","border","boxShadow","width","FaArrowUp","FaClock","value","total","station","Math","round","FaCheckCircle","FaExclamationCircle","FaWifi","FaChartLine","layout","i","x","y","w","h","isResizable","DashboardCards","HvDashboard","card","HvSection","dashboardColor","VerizonDashboard","Navbar","HvButton","variant","radius","disabled","startIcon","Refresh","data","length","row","idx","date","Year","String","Month","padStart","Day","timestamp","Hour","Minute","tempmax_attribute","tempavg_attribute","tempmin_attribute","FILTERS","label","filterData","filter","last","lastDate","cutoff","setHours","getHours","setDate","getDate","rowDate","ThermalSensorDashboard","setData","useState","setFilter","showDropdown","setShowDropdown","tableFilter","setTableFilter","showTableDropdown","setShowTableDropdown","useEffect","fetch","then","res","json","filteredData","filteredTableData","chartData","time","tempmax","tempavg","tempmin","v","f","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","type","stroke","dot","ThermalTable","gauge_temp","GaugeMonitorDashboard","GaugeTable","SummaryDashboardNavbar","ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","SummaryDashboard","tapChanger","temperatureGauges","marginBottom","labels","datasets","tension","pointRadius","fill","options","responsive","plugins","legend","display","font","family","tooltip","enabled","callbacks","tooltipItems","split","context","dataset","parsed","titleColor","bodyColor","borderWidth","displayColors","scales","grid","ticks","beginAtZero","min","max","elements","line","point","maintainAspectRatio","src","alt","low","avg","MainDashboard","Sidebar"],"sourceRoot":""}